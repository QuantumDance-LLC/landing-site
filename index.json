[{"categories":["data science"],"contents":" We\u0026rsquo;d like to introduce you to an awesome spatial (geographic) data visualization tool: keplergl.\nKeplergl is completely open source by Uber and is the default tool for spatial data visualization within Uber.\nThrough its open interface package keplergl for Python, we can pass in a variety of formats of data by writing Python code in jupyter notebook, and use its built-in rich spatial data visualization functions in its interactive window embedded in notebook. Here are 3 main addresses for learning.\n  the official website address: https://kepler.gl/\n  jupyter notebook manual address: https://github.com/keplergl/kepler.gl/tree/master/docs/keplergl-jupyter#geojson\n  Case study address: https://github.com/keplergl/kepler.gl/tree/master/bindings/kepler.gl-jupyter/notebooks\n  Installation  The installation of keplergl is very simple.\npip install keplergl Amazing graphics  A wave of stunning graphics are coming.\n Getting Started  import pandas as pd import geopandas as gpd from keplergl import KeplerGl # Create an object kep1 = KeplerGl(height=600) # Activate the object and load it into jupyter notebook kep1 As you can see, after running the basic code in Jupyter directly generated the built-in graphics, the graphics themselves are also dynamic; dark black background is also my favorite:\nAdding data  By default, keplergl can add 3 types of data:\n csv GeoJSON DataFrame  csv format There is a csv data in the local directory: china.csv, which records the latitude and longitude of each province in China.\nwith open(\u0026#34;china.csv\u0026#34;, \u0026#34;r\u0026#34;) as f: csv_data = f.read() # add_data add data kep1.add_data(data=csv_data, name=\u0026#34;csv_kep\u0026#34;) kep1  DataFrame format china = pd.read_csv(\u0026#34;china.csv\u0026#34;) kep1.add_data(data=china, name=\u0026#34;dataframe_kep\u0026#34;) kep1  GeoJson format url = \u0026#39;http://eric.clst.org/assets/wiki/uploads/Stuff/gz_2010_us_040_00_500k.json\u0026#39; country_gdf = gpd.read_file(url) # geopandas read json file kep1.add_data(data=country_gdf, name=\u0026#34;state\u0026#34;) kep1  Custom graphics  Keplergl\u0026rsquo;s customization method: the criticality button. Once inside, you can customize the operation\n Saving and reusing configurations The configuration of the instantiated kep can be saved and reused in the following instance objects.\n Save.  # Save as a file with open(\u0026#39;config1.py\u0026#39;,\u0026#39;w\u0026#39;) as f: f.write(\u0026#39;config={}\u0026#39;.format(kep1.config)) # Run: magic command %run %run config1.py Reuse  kep2 = KeplerGl(height=400, data={\u0026#34;layer1\u0026#34;:df}, config=kep1.config # configuration of kep1 ) kep2 Save graphics   minimalist version, mainly the file name  kep1.save_to_html(file_name=\u0026#34;first_kep.html\u0026#34;) full version: file name, configuration, data, readability  # 4 parameters kep1.save_to_html(file_name=\u0026#34;first_kep.html\u0026#34;, data={\u0026#39;data_1\u0026#39;:china}, config=config, read_only=True ) Web app  The operations shown above are all done in the notebook, we can also do them directly online: https://kepler.gl/demo\nWe will share more articles after we have studied this tool seriously, this library is worth studying\n Source: https://mp.weixin.qq.com/s/t-X8NtuYXY-lKPOrSY3aPQ\n","date":"02 Jan, 2022","image":"images/blog/post-1.webp","permalink":"https://codelink.ai/blog/data-science/spatial-data-visualization-wizard-keplergl/","tags":["visualization","python"],"title":"Spatial data visualization wizard keplergl"},{"categories":["web development"],"contents":" We recommend several popular websites that can help improve your programming efficiency.\nCodepen  Demo video: https://www.bilibili.com/video/BV1im4y1X7zb/\nHere you can find a lot of front-end code written by coding guru. In addition to various web layout codes, there are more kinds of fun, cool and novel front-end animations and effects.\nFor example, when Christmas is coming, many of you asked if I could draw a Christmas tree with code.\nI can\u0026rsquo;t, but if you type \u0026ldquo;Christmas Tree\u0026rdquo; in this website, you can see different styles of Christmas tree pages!\nClick on the page you like and you\u0026rsquo;ll be taken to the code editing page, where you can modify the HTML, CSS, and JavaScript front-end code and view the results in real time in the area at the bottom, which is very convenient!\nAfter editing a web page, you can browse it in full screen, favorite, clone, share, etc. in the menu at the bottom right corner of the web page, and directly embed the web page into our own project or download the complete code package to local.\nThanks to the development of front-end technology, this site provides developers with a one-stop service to search for projects, edit them online, and share and export them, making it easy for us to learn other people\u0026rsquo;s good code in an independent practice.\nHere are a few more similar sites.\nCodeSandbox  CodeSandbox, as the name suggests, helps you run front-end projects in an isolated environment.\nHere you can create your own sandboxes (projects) based on rich templates for common front-end frameworks like React, Vue, Angular, VuePress, Svelte, etc..\nOnce you create your sandbox, you can edit your code online, view your results in real time, or share your sandbox with other people.\nJSFiddle  JSFiddle is a front-end development practice, you can also write code online and view the effect in real time. Compared with Codepen, I feel that this site has a better editing experience.\nWhen you see a great piece of JS code or plugin on the web, you don\u0026rsquo;t have to download it locally. Paste the code directly into JSFiddle and you\u0026rsquo;ll be able to see it in action in the fastest way possible. Many front-end component libraries now also use this platform to give developers a WYSIWYG experience.\nJSRUN  China\u0026rsquo;s online programming site, in addition to front-end, even supports online debugging and running of up to 30 programming languages!\nLike Codepen, you can see many code snippets written by others here and download them directly. You can also save and share your code, and create your own little code collection.\nI have to say, this site is one of the best in China, with great access and functionality!\nGitpod  This platform is a bit more advanced than the above mentioned sites. It is a powerful online IDE (Integrated Programming Environment) that provides a VSCode-style editor that allows you to write code online to complete your development.\nGitpod is based on container technology and will help you compile, build, and run any GitHub project, not just the front end, with one click! And each project runs in isolation from each other, so you can create them as you go and recycle them whenever you\u0026rsquo;re done.\nIf you\u0026rsquo;ve got your eye on a GitHub project and you don\u0026rsquo;t want to build it locally to see how it works, the best way to build and run it online is with Gitpod. There are more and more GitHub projects that have access to Gitpod, and if you see the button below, you can deploy it with one click, which is much more efficient!\nSource: https://mp.weixin.qq.com/s/VJtMNyhAYROYURfBa1nKfw\n","date":"27 Dec, 2021","image":"images/blog/post-2.webp","permalink":"https://codelink.ai/blog/web-development/a-few-of-this-years-super-hot-programming-sites/","tags":["tool","javascript"],"title":"A few of this year's super-hot programming sites!"},{"categories":["python"],"contents":" Today we share with you 3 relatively cold knowledge.\nThe first one: the magic dictionary key  some_dict = {} some_dict[5.5] = \u0026#34;Ruby\u0026#34; some_dict[5.0] = \u0026#34;JavaScript\u0026#34; some_dict[5] = \u0026#34;Python\u0026#34; Output:\n\u0026gt;\u0026gt;\u0026gt; some_dict[5.5] \u0026#34;Ruby\u0026#34; \u0026gt;\u0026gt;\u0026gt; some_dict[5.0] \u0026#34;Python\u0026#34; \u0026gt;\u0026gt;\u0026gt; some_dict[5] \u0026#34;Python\u0026#34; \u0026ldquo;Python\u0026rdquo; eliminates the existence of \u0026ldquo;JavaScript\u0026rdquo;?\n💡 Description:\n  The Python dictionary determines whether two keys are identical by checking for key equality and comparing hash values.\n  Immutable objects with the same value always have the same hash value in Python.\n  Note: Objects with different values may also have the same hash (hash collision).\n\u0026gt;\u0026gt; 5 == 5.0 True \u0026gt;\u0026gt;\u0026gt; hash(5) == hash(5.0) True When executing the statement some_dict[5] = \u0026quot;Python\u0026quot;, the existing value \u0026ldquo;JavaScript\u0026rdquo; is overwritten by \u0026ldquo;Python\u0026rdquo; because Python recognizes 5 and 5.0 as the same key of some_dict.\nSecond: return in exception handling  def some_func(): try: return \u0026#39;from_try\u0026#39; finally: return \u0026#39;from_finally\u0026#39; Output:\n\u0026gt;\u0026gt;\u0026gt; some_func() \u0026#39;from_finally\u0026#39; 💡 Description:\n  When return, break or continue is executed in the try of the \u0026ldquo;try\u0026hellip;finally\u0026rdquo; statement, the finally clause is still executed.\n  The return value of the function is determined by the last executed return statement. Since the finally clause will always be executed, the return in the finally clause will always be the last statement executed.\n  Third: Determination of identical objects  class WTF: pass Output:\n\u0026gt;\u0026gt;\u0026gt; WTF() == WTF() # Two different objects should not be equal False \u0026gt;\u0026gt;\u0026gt; WTF() is WTF() # also not the same False \u0026gt;\u0026gt;\u0026gt; hash(WTF()) == hash(WTF()) # The hash values should also be different True \u0026gt;\u0026gt;\u0026gt; id(WTF()) == id(WTF()) True 💡 Description:\n  When the id function is called, Python creates an object of class WTF and passes it to the id function. The id function then gets its id value (that is, its memory address), and discards the object. The object is then destroyed.\n  When we do this twice in a row, Python allocates the same memory address to the second object. Because the id function (in CPython) uses the object\u0026rsquo;s memory address as the object\u0026rsquo;s id value, the id values of both objects are the same.\n  In summary, an object\u0026rsquo;s id value is unique only for the life of the object. After the object is destroyed, or before it is created, other objects can have the same id value.\n  So why does the is operation result in False? Let\u0026rsquo;s look at this code.\n  class WTF(object): def __init__(self): print(\u0026#34;I\u0026#34;) def __del__(self): print(\u0026#34;D\u0026#34;) Output:\n\u0026gt;\u0026gt;\u0026gt; WTF() is WTF() I I D D False \u0026gt;\u0026gt;\u0026gt; id(WTF()) == id(WTF()) I D I D True As you can see, the order of object destruction is the reason for all the differences.\nOriginal link: https://github.com/leisurelicht/wtfpython-cn\n","date":"19 Dec, 2021","image":"images/blog/post-4.webp","permalink":"https://codelink.ai/blog/python/there-are-3-incredible-return-functions-in-python/","tags":["python","learning"],"title":"There are 3 incredible return functions in Python"},{"categories":["data science"],"contents":" KalidoKit is the integration of a variety of algorithms to achieve, Facemesh, Blazepose, Handpose, Holistic. Let\u0026rsquo;s see the effect.\nThe virtual image is driven by the movements of real human limbs, faces and hands.\nThe mainstream application direction of this technology is virtual anchor.\nIt is possible to drive avatars to dance.\nIt can also capture the whole body movements, facial expressions, gestures, etc., like the motion picture at the beginning.\nIn addition to this type of driving virtual image type, you can also use your imagination to make some interesting small applications.\nKalidoKit  This project is based on Tensorflow.js implementation.\n Project address: https://github.com/yeemachine/kalidokit\n The key point information captured can be used to drive 2D and 3D avatars, combined with some avatar driving engines, to achieve the effect shown at the beginning of the article.\nIt is possible to drive both Live2D images and 3D VRM images.\nThe technical points involved here can\u0026rsquo;t be finished in one article, so today we mainly talk about the basic key point detection technologies: face key point detection, human pose estimation, and gesture pose estimation.\nFace keypoint detection  Face keypoint detection, there are sparse and dense.\nLike the basic one, 68 keypoints are detected.\nGenerally speaking, for the detection of closed eyes, head posture, open and closed mouth, a simple 68 keypoints is enough.\nOf course, there are also more dense keypoints detection.\nFor some skin beauty applications, a dense keypoint detection algorithm is needed, with thousands of keypoints.\nBut the idea of the algorithm is the same, to return the location coordinates of these keypoints, usually used with face detection algorithms.\nFor those who want to learn face keypoint detection algorithms, we recommend two introductory projects.\n  https://github.com/1adrianb/face-alignment https://github.com/ChanChiChoi/awesome-Face_Recognition   One is a basic introductory project, and the other integrates the mainstream algorithms for face keypoints.\nHuman Pose Estimation  Human pose estimation is also a very basic problem in computer vision.\nFrom the point of view of the name, it can be understood as the estimation of the position of the \u0026ldquo;human body\u0026rdquo; pose (key points, such as head, left hand, right foot, etc.).\nGenerally, there are 4 types of tasks.\n Single-Person Skeleton Estimation (SPSE) Multi-person Pose Estimation Video Pose Tracking 3D Skeleton Estimation  Simply put, it is the detection of human skeleton joint points to locate the human pose.\nHuman pose estimation has a wide range of applications, for example, pose detection and action prediction of pedestrians in street scenes in the autonomous driving industry; pedestrian re-identification problems in the security field, specific action monitoring in special scenes; movie special effects in the film industry, etc.\nFor those who want to learn, you can read this compiled paper at\n https://github.com/cbsudux/awesome-human-pose-estimation\n Gestural posture estimation  Hand joints are more flexible, agile and self-obscuring, so it is a little more complicated.\nBut the principle is similar to human posture estimation.\nIn addition to this regular gesture recognition, it can also be used to do some special effects.\nIn fact, many of these human effects, the positioning of the position, are achieved with the help of these key points.\nAs above, to learn, you can see this integrated material at\n https://github.com/xinghaochen/awesome-hand-pose-estimation\n Source: https://mp.weixin.qq.com/s/t3qOKkErm8ZbmKDOhHqCOA\n","date":"22 Nov, 2021","image":"images/blog/post-5.png","permalink":"https://codelink.ai/blog/data-science/algorithm-kalidokit/","tags":["computer vision","python"],"title":"KalidoKit: algorithms to achieve, Facemesh, Blazepose, Handpose, Holistic"},{"categories":["web development"],"contents":" There is no doubt: making good use of online resources and tools can speed up development, improve quality, and make life more Chill 😎~.\nThis article brings you 10 great free web resources for front-end developers ⭐ 😎 (๑-̀ㅂ-́)و✧\n1. Undraw  If you need free SVG illustrations for your website, don\u0026rsquo;t miss Undraw!\nSVG illustration resources are huge, with search function available; and, you can also customize the color scheme of the illustration, simply too NICE ~\nA large number of resources, support search 🔍 Feel free to change the color scheme 🌈\n2. Error 404  I don\u0026rsquo;t know where you would normally go to find 404 page material ~\nNow you have one more option: Error 404\nCool, cool, cool!\n3. Squoosh  Compressed images!\nCompared to tinypng has better compression effect.\ntinypng compression\nSquoosh compression\nCompression effect: the former is 80%, the latter is 95%; the final result is also good ~👍\nWhy not try ?\n4. DevDocs  DevDocs, as the name suggests, is the technical documentation for web development and is a very good learning manual!\nOther than that, I like the UI! Also supports adding common technical documents, changing the theme, etc. ~\n5. iHateRegex  If you hate regular expressions, then do not miss this site (ˉ▽ˉ;)\u0026hellip;\nNot only that, but there are also detailed illustrations! Damn, it\u0026rsquo;s so well done ╮(╯▽▽)╭\n6. Carbon  People often ask: \u0026ldquo;How do I generate such nice code snippets?\u0026rdquo; and the answer is in Carbon!\nYou can generate code snippets for various themes and languages and export them as images or copy them to other platforms, it\u0026rsquo;s really nice to use 👌 👌 👌 comfortable~~\n7. Dribbble  For web design inspiration, look no further than Dribbble!!!\nWhen you see other people\u0026rsquo;s backend designs, you want to go back and rip up your own 🐶\n8. Animista  Css animation, copy the code and you can use it! No installation, doesn\u0026rsquo;t it sound good?\n9. Shape Divider  You can generate all kinds of dividers and export them in SVG format.\nFancy, I like it (❤ ω ❤)\n10. Notion  If you need a platform for note-taking, we recommend one option: Notion\nQuick Notes, TaskList, Diary, Reading List, all types, everything, recommended~\nSource: https://mp.weixin.qq.com/s/n71kwdVSLoJatAmCs-djJQ\n","date":"17 Oct, 2021","image":"images/blog/post-3.webp","permalink":"https://codelink.ai/blog/web-development/recommend-10-very-wow-web-resources-to-the-front-end-developers/","tags":["tool","frontend","web"],"title":"Recommend 10 very 'wow' Web 'resources' to the front-end developers"}]